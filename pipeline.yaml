apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: generic-build-pipeline
spec:
  params:
    - name: IMAGE_TAG
  workspaces:
    - name: source
  outputs:
    
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.GITHUB_REPO)
        - name: revision
          value: main
        - name: sslVerify
          value: 'false'
        - name: noProxy
          value: 'true'
      taskRef:
        kind: Task
        name: git-clone
      workspaces:
      - name: output
        workspace: source

    # - name: metadata
    # May need to see how the customer is fetching image name/namespace when running generic pipelines
    #   params:
    #     - name: url
    #       value: $(params.GITHUB_REPO)
    #     - name: revision
    #       value: main
    #     - name: sslVerify
    #       value: 'false'
    #     - name: noProxy
    #       value: 'true'
    #   taskRef:
    #     kind: Task
    #     name: git-clone
    #   workspaces:
    #   - name: output
    #     workspace: source

    - name: build
      params:
        - name: IMAGE
          value: 'image-registry.openshift-image-registry.svc:5000/tekton-test/test-image:$(params.IMAGE_TAG)'
        - name: STORAGE_DRIVER
          value: vfs
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: CONTEXT
          value: .
        - name: BUILD_EXTRA_ARGS
          value: "--layers=true"
        - name: TLSVERIFY
          value: 'true'
        - name: FORMAT
          value: oci
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: buildah
      workspaces:
        - name: source
          workspace: source
        # - name: varlibcontainers
        #   workspace: varlibcontainers
